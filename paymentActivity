new comitt


package com.example.refactor.activities

import android.content.Context
import android.content.Intent
import android.os.Bundle
import android.util.Log
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity
import com.example.refactor.R
import com.example.refactor.models.FormData
import com.example.refactor.network.ApiClient
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import retrofit2.HttpException
import java.io.IOException

class FormActivity : AppCompatActivity() {

    private lateinit var etMobileNumber: EditText
    private lateinit var etMPin: EditText
    private lateinit var btnNextForm: Button

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_form)

        etMobileNumber = findViewById(R.id.etMobileNumber)
        etMPin = findViewById(R.id.etMPin)
        btnNextForm = findViewById(R.id.btnProceed)

        btnNextForm.setOnClickListener {
            val mobileNumber = etMobileNumber.text.toString().trim()
            val mPin = etMPin.text.toString().trim()

            if (validateInputs(mobileNumber, mPin)) {
                submitFormData(mobileNumber, mPin)
            }
        }
    }

    private fun validateInputs(mobileNumber: String, mPin: String): Boolean {
        val mobileRegex = "^[6-9]\\d{9}$".toRegex()
        val mPinRegex = "^\\d{6}$".toRegex()

        if (!mobileRegex.matches(mobileNumber)) {
            showToast("Invalid Mobile Number!")
            return false
        }

        if (!mPinRegex.matches(mPin)) {
            showToast("Invalid MPIN!")
            return false
        }

        return true
    }

    private fun submitFormData(mobileNumber: String, mPin: String) {
        val apiInterface = ApiClient.api
        val formData = FormData(mobile = mobileNumber, mPin = mPin)

        Log.d("FormActivity", "Sending data to backend")

        CoroutineScope(Dispatchers.IO).launch {
            try {
                val response = apiInterface.saveFormDataStep1(formData)
                if (response.isSuccessful) {
                    val responseBody = response.body()
                    if (responseBody?.success == true) {
                        val userId = responseBody.data?.userId
                        Log.d("FormActivity", "User ID received")
                        runOnUiThread { handleUserId(userId) }
                    } else {
                        runOnUiThread { showToast("Submission failed") }
                    }
                } else {
                    runOnUiThread { showToast("Submission error") }
                }
            } catch (e: HttpException) {
                Log.e("FormActivity", "HTTP Exception")
                runOnUiThread { showToast("HTTP Error") }
            } catch (e: IOException) {
                Log.e("FormActivity", "Network Error")
                runOnUiThread { showToast("Network Error") }
            } catch (e: Exception) {
                Log.e("FormActivity", "Unexpected Error")
                runOnUiThread { showToast("Unexpected Error") }
            }
        }
    }

    private fun handleUserId(userId: String?) {
        if (!userId.isNullOrEmpty()) {
            saveUserIdToSharedPreferences(userId)
            showToast("Data submitted successfully!")
            navigateToNextForm(userId)
        } else {
            showToast("Data submition Failed!")
        }
    }

    private fun saveUserIdToSharedPreferences(userId: String) {
        val sharedPref = getSharedPreferences("UserPreferences", Context.MODE_PRIVATE)
        val editor = sharedPref.edit()
        editor.putString("userId", userId)
        editor.apply()
    }

    private fun showToast(message: String) {
        Toast.makeText(this, message, Toast.LENGTH_SHORT).show()
    }

    private fun navigateToNextForm(userId: String) {
        val intent = Intent(this, PaymentActivity::class.java)
        intent.putExtra("USER_ID", userId)
        startActivity(intent)
        finish()
    }
}
